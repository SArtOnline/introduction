(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-39319d3f"],{"0b47":function(e,t,r){"use strict";r.r(t);var o=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("page-header-wrapper",{attrs:{title:"JAVA文档","tab-list":e.tabList,"tab-active-key":e.tabActiveKey},on:{tabChange:e.handleTabChange},scopedSlots:e._u([{key:"content",fn:function(){return[r("a-descriptions",{attrs:{size:"small",column:e.isMobile?1:2}},[r("a-descriptions-item",{attrs:{label:"语雀文档"}},[r("a",{attrs:{href:"https://www.yuque.com/artonline/java/ng0wew",target:"_blank"}},[e._v("JAVA文档")])])],1)]},proxy:!0},{key:"extra",fn:function(){},proxy:!0}])},["threadPool"===e.tabActiveKey?r("div",[r("executor-service",{attrs:{id:"threadPool","thread-pool-config":e.threadPoolConfig}}),r("a-card",{staticStyle:{"margin-top":"24px"},attrs:{bordered:!1,title:"Executors提供4种线程池实现方案"}},[r("a-descriptions",{attrs:{size:"small"}},[r("span",{attrs:{slot:"title"},slot:"title"},[e._v("1、单例线程池 "),r("a-tag",[r("a",{attrs:{href:"#threadPool"},on:{click:function(t){return e.tryThreadPool({corePoolSize:1,maximumPoolSize:1,keepAliveTime:0})}}},[e._v("试一试")])])],1),r("a-descriptions-item",{attrs:{label:"",span:3}},[r("strong",[e._v("Executors.newSingleThreadExecutor()")]),e._v("：创建单例线程池，该线程池中同时在线的线程如其名只有一个，并且先入队先执行，也就是"),r("strong",[e._v("FIFO规则")]),e._v("。其线程池配置如下：")]),r("a-descriptions-item",{attrs:{label:"corePoolSize"}},[e._v("1")]),r("a-descriptions-item",{attrs:{label:"maximumPoolSize"}},[e._v("1")]),r("a-descriptions-item",{attrs:{label:"keepAliveTime"}},[e._v("0")]),r("a-descriptions-item",{attrs:{span:3}},[e._v("任务队列为链表"),r("strong",[e._v("LinkedBlockingQueue")]),e._v("，每次提交任务添加到队尾，消费队首任务。因此遵循"),r("strong",[e._v("FIFO规则")])])],1),r("a-descriptions",{attrs:{size:"small"}},[r("span",{attrs:{slot:"title"},slot:"title"},[e._v("2、定长线程池 "),r("a-tag",[r("a",{attrs:{href:"#threadPool"},on:{click:function(t){return e.tryThreadPool({corePoolSize:5,maximumPoolSize:5,keepAliveTime:0})}}},[e._v("试一试")])])],1),r("a-descriptions-item",{attrs:{label:"",span:3}},[r("strong",[e._v("Executors.newFixedThreadPool(n)")]),e._v("：创建定长线程池，该线程池只有核心任务池且同时运行的线程最大数量时确定的，其中corePoolSize与maximumPoolSize总是相等。其线程池配置如下：")]),r("a-descriptions-item",{attrs:{label:"corePoolSize"}},[e._v("n")]),r("a-descriptions-item",{attrs:{label:"maximumPoolSize"}},[e._v("n")]),r("a-descriptions-item",{attrs:{label:"keepAliveTime"}},[e._v("0")]),r("a-descriptions-item",{attrs:{span:3}},[e._v("任务队列为链表"),r("strong",[e._v("LinkedBlockingQueue")]),e._v("，每次提交任务添加到队尾，消费队首任务。因此遵循"),r("strong",[e._v("FIFO规则")])])],1),r("a-descriptions",{attrs:{size:"small"}},[r("span",{attrs:{slot:"title"},slot:"title"},[e._v("3、缓存线程池 "),r("a-tag",[r("a",{attrs:{href:"#threadPool"},on:{click:function(t){return e.tryThreadPool({corePoolSize:0,maximumPoolSize:20,keepAliveTime:6e4})}}},[e._v("试一试")])])],1),r("a-descriptions-item",{attrs:{label:"",span:3}},[r("strong",[e._v("Executors.newCachedThreadPool()")]),e._v("：创建缓存线程池，该线程池没有核心任务池，也就是说任务执行完成后，一定时间内没有提交其他任务将会回收内存资源，理论上任务数不受限制。其线程池配置如下：")]),r("a-descriptions-item",{attrs:{label:"corePoolSize"}},[e._v("0")]),r("a-descriptions-item",{attrs:{label:"maximumPoolSize"}},[e._v("∞")]),r("a-descriptions-item",{attrs:{label:"keepAliveTime"}},[e._v("60000")]),r("a-descriptions-item",{attrs:{span:3}},[e._v("任务队列为同步队列"),r("strong",[e._v("SynchronousQueue")]),e._v("，每次提交任务只有在任务被消费后，才能提交下次任务，该队列永远都保持1个任务或没有任务。此外线程池不限制数量，因此遵循"),r("strong",[e._v("提交即执行")]),e._v("。")])],1),r("a-descriptions",{attrs:{size:"small"}},[r("span",{attrs:{slot:"title"},slot:"title"},[e._v("4、定时线程池 "),r("a-tag",[r("a",{attrs:{href:"#threadPool"},on:{click:function(t){return e.tryThreadPool({corePoolSize:5,maximumPoolSize:20,keepAliveTime:6e4})}}},[e._v("试一试")])])],1),r("a-descriptions-item",{attrs:{label:"",span:3}},[r("strong",[e._v("Executors.newScheduledThreadPool(n)")]),e._v("：创建定时线程池，该线程池支持规划可重复利用的核心工作池，且不限制运行的任务数量。其线程池配置如下：")]),r("a-descriptions-item",{attrs:{label:"corePoolSize"}},[e._v("n")]),r("a-descriptions-item",{attrs:{label:"maximumPoolSize"}},[e._v("∞")]),r("a-descriptions-item",{attrs:{label:"keepAliveTime"}},[e._v("0")]),r("a-descriptions-item",{attrs:{span:3}},[e._v("任务队列为延迟队列"),r("strong",[e._v("DelayedWorkQueue")]),e._v("，该队列作用是延迟一段时间后，按优先队列方式消费任务，因此提交的任务不会立马执行，并且具有优先级。因此遵循"),r("strong",[e._v("延迟后优先级高即执行")]),e._v("。")])],1)],1)],1):e._e(),"lock"===e.tabActiveKey?r("div",[r("lock")],1):e._e()])},a=[],i=r("432b"),s=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("a-card",{attrs:{bordered:!1,title:"ThreadPoolExecutor动态演示"}},[r("a-badge",{attrs:{slot:"extra",count:e.count},slot:"extra"},[r("a-button",{attrs:{icon:"plus"},on:{click:e.addThread}},[e._v("添加线程")])],1),r("a-button",{staticStyle:{"margin-left":"10px"},attrs:{slot:"extra",type:"primary"},on:{click:e.execute},slot:"extra"},[e._v("execute")]),r("a-form",{attrs:{form:e.form}},[r("a-row",{attrs:{gutter:24}},[r("a-col",{attrs:{xs:7,md:7,lg:7}},[r("a-form-item",{attrs:{label:"corePoolSize"}},[r("a-input",{attrs:{type:"number",disabled:e.executeFlag},model:{value:e.threadPoolConfig.corePoolSize,callback:function(t){e.$set(e.threadPoolConfig,"corePoolSize",t)},expression:"threadPoolConfig.corePoolSize"}})],1)],1),r("a-col",{attrs:{xs:7,md:7,lg:7}},[r("a-form-item",{attrs:{label:"maximumPoolSize"}},[r("a-input",{attrs:{type:"number",disabled:e.executeFlag},model:{value:e.threadPoolConfig.maximumPoolSize,callback:function(t){e.$set(e.threadPoolConfig,"maximumPoolSize",t)},expression:"threadPoolConfig.maximumPoolSize"}})],1)],1),r("a-col",{attrs:{xs:7,md:7,lg:7}},[r("a-form-item",{attrs:{label:"keepAliveTime"}},[r("a-input",{attrs:{type:"number",disabled:e.executeFlag},model:{value:e.threadPoolConfig.keepAliveTime,callback:function(t){e.$set(e.threadPoolConfig,"keepAliveTime",t)},expression:"threadPoolConfig.keepAliveTime"}})],1)],1)],1),e.shutdown?e._e():r("a-row",{attrs:{gutter:24}},[r("a-col",{attrs:{xs:24,md:24,lg:24}},[r("a-form-item",{ref:"corePoolContainer",attrs:{label:"corePool"}},e._l(e.coreWorkers,(function(e,t){return r("a-progress",{key:"c"+t,attrs:{percent:e.percent,size:"small"}})})),1)],1),r("a-col",{attrs:{xs:24,md:24,lg:24}},[r("a-form-item",{ref:"otherContainer",attrs:{label:"maximumPool - corePool"}},e._l(e.maxWorkers,(function(e,t){return r("a-progress",{key:"m"+t,attrs:{percent:e.percent||0,size:"small"}})})),1)],1)],1)],1)],1)},n=[],l=(r("4de4"),r("a434"),r("8111"),{props:{threadPoolConfig:{type:Object,default:function(){return{corePoolSize:3,maximumPoolSize:5,keepAliveTime:1e3,timeUnit:"s",blockingQueue:[]}}}},data:function(){return{form:this.$form.createForm(),executeFlag:!1,count:0,workers:[],coreWorkers:[],maxWorkers:[]}},computed:{shutdown:function(){return 0===this.count&&0===this.workerCountOf()||0===this.workerCountOf()&&0===this.maxWorkers.length}},watch:{threadPoolConfig:{handler:function(e,t){e.corePoolSize>e.maximumPoolSize-0&&(this.$message.warning("corePoolSize不能大于maximumPoolSize"),this.threadPoolConfig.corePoolSize=this.threadPoolConfig.maximumPoolSize)},deep:!0},coreWorkers:{handler:function(e,t){var r=this;setTimeout((function(){for(var t=0;t<e.length;t++)e[t].percent>=100&&(r.coreWorkers[t].percent=0),0<e[t].percent&&e[t].percent<100&&(r.coreWorkers[t].percent=r.coreWorkers[t].percent+Math.ceil(3*Math.random()))}),1e3)},deep:!0},maxWorkers:{handler:function(e,t){var r=this;setTimeout((function(){for(var t=function(t){if(e[t].percent>=100){var o=setTimeout((function(){r.maxWorkers.splice(t,1)}),r.threadPoolConfig.keepAliveTime);return r.count>0&&(clearTimeout(o),r.maxWorkers[t].percent=0),"continue"}0<e[t].percent&&e[t].percent<100&&(r.maxWorkers[t].percent=r.maxWorkers[t].percent+Math.ceil(3*Math.random()))},o=0;o<e.length;o++)t(o)}),100)},deep:!0}},methods:{addThread:function(){this.count++,this.threadPoolConfig.blockingQueue.push({percent:1})},offer:function(){return this.threadPoolConfig.blockingQueue.pop()},addWorker:function(e){var t=this.offer();if(t)if(e){for(var r=0;r<this.coreWorkers.length;r++)if(0===this.coreWorkers[r].percent){this.coreWorkers[r].percent=1,this.count--;break}}else if(this.maxWorkers.length<this.threadPoolConfig.maximumPoolSize-this.threadPoolConfig.corePoolSize)this.maxWorkers.push(t),this.count--;else for(r=0;r<this.maxWorkers.length;r++)if(0===this.maxWorkers[r].percent){this.maxWorkers[r].percent=1,this.count--;break}},workerCountOf:function(){return this.coreWorkers.filter((function(e){return e.percent>0})).length},initPool:function(){for(var e=[],t=0;t<this.threadPoolConfig.corePoolSize;t++)e.push({percent:0});this.$set(this,"coreWorkers",e),this.$set(this,"maxWorkers",[])},execute:function(){this.executeFlag=!0,this.initPool();var e=this,t=setInterval((function(){e.workerCountOf()<e.threadPoolConfig.corePoolSize?e.addWorker(!0):e.maxWorkers.filter((function(e){return e.percent>0})).length<e.threadPoolConfig.maximumPoolSize-e.threadPoolConfig.corePoolSize&&e.addWorker(!1),e.count<=0&&(e.$set(e,"executeFlag",!1),clearInterval(t))}),500)}}}),c=l,u=r("2877"),m=Object(u["a"])(c,s,n,!1,null,null,null),p=m.exports,d=function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",[r("a-card",{staticStyle:{"margin-top":"24px"},attrs:{bordered:!1,title:""}},[r("a-card",{attrs:{type:"inner",title:"锁概念"}},[r("a-descriptions",{attrs:{title:"悲观锁",size:"small"}},[r("a-descriptions-item",{attrs:{label:"",span:3}},[e._v("悲观锁认为一人持锁，全员等待。")]),r("a-descriptions-item",{attrs:{label:"适用于",span:3}},[e._v("悲观锁适用于"),r("strong",[e._v("write")]),e._v("较多的场景，保证写安全")]),r("a-descriptions-item",{attrs:{label:"实现",span:3}},[e._v("ReentrantLock、ReentrantReadWriteLock")])],1),r("a-descriptions",{attrs:{title:"乐观锁",size:"small"}},[r("a-descriptions-item",{attrs:{label:"",span:3}},[e._v("乐观锁认为一起抢，先到先得。CAS的自旋原理是乐观锁的一种实现方式，而自适应自旋原理是乐观锁转化为悲观锁的一种实现方式。")]),r("a-descriptions-item",{attrs:{label:"适用于",span:3}},[e._v("乐观锁适用于"),r("strong",[e._v("read")]),e._v("较多的场景，保证读效率")]),r("a-descriptions-item",{attrs:{label:"实现",span:3}},[e._v("StampedLock、无锁")])],1)],1),r("a-card",{staticStyle:{"margin-top":"24px"},attrs:{type:"inner",title:"锁的状态"}},[r("a-descriptions",{attrs:{title:"无锁",size:"small"}},[r("a-descriptions-item",{attrs:{label:"",span:3}},[e._v("宏观概念没有锁。CAS原理的自旋方式便是一种无锁的实现方式。细想一下，无锁实质上是不需要宏观调用的锁。")])],1),r("a-descriptions",{attrs:{title:"偏向锁",size:"small"}},[r("a-descriptions-item",{attrs:{label:"",span:3}},[e._v("只有一个线程的锁。")])],1),r("a-descriptions",{attrs:{title:"轻量级锁",size:"small"}},[r("a-descriptions-item",{attrs:{label:"",span:3}},[e._v("由偏向锁升级而来。多个线程"),r("strong",[e._v("自适应自旋")]),e._v("获取锁，此时所有线程都会占用CPU。")])],1),r("a-descriptions",{attrs:{title:"重量级锁",size:"small"}},[r("a-descriptions-item",{attrs:{label:"",span:3}},[e._v("由轻量级锁升级而来。由于多个线程"),r("strong",[e._v("自旋超时")]),e._v("，自适应升级。此时所有请求锁的线程阻塞。")])],1)],1),r("a-card",{staticStyle:{"margin-top":"24px"},attrs:{type:"inner",title:"锁的特征"}},[r("a-descriptions",{attrs:{title:"可重入锁(ReentrantLock)",size:"small"}},[r("a-descriptions-item",{attrs:{label:"",span:3}},[r("strong",[e._v("同一个线程可以申请同一个锁且不会引起死锁")]),e._v("。否则试想下，同一个锁被申请多次，理论上只能分配一次，同一个线程申请同一个锁多次不就是死锁吗？")])],1),r("a-descriptions",{attrs:{title:"读写锁(ReentrantReadWriteLock\\StampedLock)",size:"small"}},[r("a-descriptions-item",{attrs:{label:"",span:3}},[r("strong",[e._v("读锁共享写锁私有，且二者不会同时存在")]),e._v("。读锁是一种共享锁，而写锁是一种独占锁，这两种锁是概念且同时出现和存在。当存在读锁时，就不能存在写锁，反之也成立。")])],1)],1),r("a-card",{staticStyle:{"margin-top":"24px"},attrs:{type:"inner",title:"锁的申请"}},[r("a-descriptions",{attrs:{title:"公平锁",size:"small"}},[r("a-descriptions-item",{attrs:{label:"",span:3}},[r("strong",[e._v("等待时间长的线程先获取锁")]),e._v("。由AQS同步队列实现线程排队等待锁。")])],1),r("a-descriptions",{attrs:{title:"不公平锁",size:"small"}},[r("a-descriptions-item",{attrs:{label:"",span:3}},[r("strong",[e._v("谁抢到就是谁的")]),e._v("。直接CAS自旋抢占锁。")])],1)],1)],1)],1)},f=[],h={name:"Advanced",mixins:[i["a"]],data:function(){return{}},filters:{statusFilter:function(e){var t={agree:"成功",reject:"驳回"};return t[e]},statusTypeFilter:function(e){var t={agree:"success",reject:"error"};return t[e]}},methods:{handleTabChange:function(e){this.tabActiveKey=e}}},v=h,g=(r("4cf5"),Object(u["a"])(v,d,f,!1,null,"4b2bbbe8",null)),b=g.exports,k={components:{ExecutorService:p,Lock:b},name:"Advanced",mixins:[i["a"]],data:function(){return{threadPoolConfig:{corePoolSize:3,maximumPoolSize:5,keepAliveTime:1e3,timeUnit:"s",blockingQueue:[]},tabList:[{key:"threadPool",tab:"线程池"},{key:"lock",tab:"锁"}],tabActiveKey:"threadPool"}},filters:{statusFilter:function(e){var t={agree:"成功",reject:"驳回"};return t[e]},statusTypeFilter:function(e){var t={agree:"success",reject:"error"};return t[e]}},methods:{handleTabChange:function(e){this.tabActiveKey=e},tryThreadPool:function(e){Object.assign(this.threadPoolConfig,e)}}},P=k,_=(r("a0bf"),Object(u["a"])(P,o,a,!1,null,"166c5fcc",null));t["default"]=_.exports},"432b":function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var o=r("5530"),a=r("5880"),i={computed:Object(o["a"])(Object(o["a"])({},Object(a["mapState"])({layout:function(e){return e.app.layout},navTheme:function(e){return e.app.theme},primaryColor:function(e){return e.app.color},colorWeak:function(e){return e.app.weak},fixedHeader:function(e){return e.app.fixedHeader},fixedSidebar:function(e){return e.app.fixedSidebar},contentWidth:function(e){return e.app.contentWidth},autoHideHeader:function(e){return e.app.autoHideHeader},isMobile:function(e){return e.app.isMobile},sideCollapsed:function(e){return e.app.sideCollapsed},multiTab:function(e){return e.app.multiTab}})),{},{isTopMenu:function(){return"topmenu"===this.layout}}),methods:{isSideMenu:function(){return!this.isTopMenu}}}},"440a":function(e,t,r){},"4cf5":function(e,t,r){"use strict";var o=r("440a"),a=r.n(o);a.a},"98af":function(e,t,r){},a0bf:function(e,t,r){"use strict";var o=r("98af"),a=r.n(o);a.a}}]);